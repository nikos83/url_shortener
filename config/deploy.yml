# Name of your application. Used to uniquely configure containers.
service: url_shortener

# Name of the container image.
image: nikos83/url_shortener

# Deploy to these servers.
servers:
  web:
    hosts:
      - 146.59.44.11
    labels:
      # Entry point for HTTP
      traefik.http.routers.deanout.entrypoints: web
      traefik.http.routers.deanout.rule: Host(`poauto.pl`)
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.routers.deanout.middlewares: redirect-to-https

      # Entry point for HTTPS
      traefik.http.routers.deanout_secure.entrypoints: websecure
      traefik.http.routers.deanout_secure.rule: Host(`poauto.pl`)
      traefik.http.routers.deanout_secure.tls.certresolver: certbot
      traefik.http.services.deanout_secure.loadbalancer.server.port: 3000

registry:
  username: nikos83
  password: <%= ENV["KAMAL_REGISTRY_PASSWORD"] %>

ssh:
  user: debian

accessories:
  mongo:
    image: mongo:latest
    host: 146.59.44.11 # Assuming MongoDB runs on the same server
    port: 27017
    directories:
      - mongo_data:/data/db

env:
  secret:
    - RAILS_MASTER_KEY
    - SECRET_KEY_BASE

traefik:
  options:
    publish:
      - "80:80"
      - "443:443"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"

volumes:
  - "storage:/rails/storage"

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /healthz
  port: 4000
